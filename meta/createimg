#!/bin/sh
# Copyright (C) 2004-2022 Soner Tari
#
# This file is part of UTMFW.
#
# UTMFW is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# UTMFW is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with UTMFW.  If not, see <http://www.gnu.org/licenses/>.

ARCH=arm64

add_platform_site_files() {
	cp -R -v $ROOT_PATH/openbsd/$INSTALL_SETS_PATH/firmware $ROOT_PATH/$SITE_DIR/etc/
	echo "set tty fb0\nset timeout 5" > $ROOT_PATH/$SITE_DIR/etc/boot.conf
}

EXCLUDE_FROM_SHA256="SHA256 SHA256.sig"

. ./meta/create

IMG_FILE=pffw${VMAJ}${VMIN}${SUBVERSION}_${ARCH}.img

echo "Creating image: $IMG_FILE"

cd $ROOT_PATH/$CD_PATH

# All sizes are in sectors
MSDOSSTART=32768
MSDOSSIZE=16384
FFSSTART=$(($MSDOSSTART + $MSDOSSIZE))

# Size of cd/arm64, trim trailing white spaces by adding 0
CD_SIZE=$(($(du -L -s . | cut -d . -f 1) + 0))
echo "CD size $CD_SIZE sectors"

# Add overhead for ffs
FS_SIZE=$(($CD_SIZE + 8192))
echo "FS size $FS_SIZE sectors"

# Add end of msdos part
IMG_SIZE=$(($FS_SIZE + $FFSSTART))
echo "Image size $IMG_SIZE sectors"

cd $ROOT_PATH
rm $IMG_FILE

doas umount ./img_ffs
doas umount ./img_msdos
doas vnconfig -u vnd0

# 1 sector = 512 bytes
# SECURITY: Do not seek, write zeros
#dd if=/dev/zero of=$IMG_FILE bs=512 count=0 seek=$IMG_SIZE
dd if=/dev/zero of=$IMG_FILE bs=512 count=$IMG_SIZE

doas vnconfig vnd0 $IMG_FILE

echo "reinit\ne 0\nC\nn\n$MSDOSSTART\n$MSDOSSIZE\nf 0\ne 3\nA6\nn\n$FFSSTART\n*\nw\nq\n" | doas fdisk -e vnd0 >/dev/null
doas fdisk vnd0

echo "a a\n\n\n\nw\nq\n" | doas disklabel -E vnd0 >/dev/null
doas disklabel vnd0

doas newfs -O 1 -m 0 -o space -i $FS_SIZE -c $CD_SIZE /dev/rvnd0a

doas newfs_msdos -L boot -c 1 -F 16 /dev/rvnd0i

mkdir ./img_ffs
doas mount /dev/vnd0a ./img_ffs

mkdir ./img_msdos
doas mount -o-l /dev/vnd0i ./img_msdos

doas cp -R -L -v $ROOT_PATH/$CD_PATH/* ./img_ffs/

doas cp -R -v openbsd/$INSTALL_SETS_PATH/BOOT/* ./img_msdos
echo "$VOL_ID\n$SYS_ID\n$APP_ID\n$PUBLISH_ID\n$PREP_ID" > ./img_msdos/README.txt

doas umount ./img_ffs
doas umount ./img_msdos
doas vnconfig -u vnd0
